extends ../layout

block content
	.col-sm-9.mainContent(ng-app="cartApp" ng-controller="cartController")
		meta(name="csrf-token", content="#{token}")

		table
			thead
				tr: h3 Shopping Cart    
					th Item 
					th Price
					th Quantity
			tbody
				tr(ng-repeat="item in items" ng-cloak)
					td {{ item.title }}
					td {{ item.price/100 | currency }}
					td 
						.form-group
							input.form-control.quantity.cartTable(type='text', id=i, value='{{ item.quantity }}' ng-model='item.quantity' name='quantity', size='30', required)
							input(type='hidden', name='_csrf', value=_csrf)
							td
								button.btn.btn.btn-primary.updateQuantity(type='button' ng-click='updateQuantity(item)')
									i.fa.fa-check
									| Update Quantity
							td
								.form-group
									button.btn.btn.btn-primary.deleteItem(type='button' ng-click='itemRemove(item)')
										i.fa.fa-check
										| Remove
				//- var i;
				
				//- var userID = carts.userID;
				//- console.log("carts.items.length = " + carts.items.length + " userID =" + userID)
				//- if (carts.items.length) {
					- var cartLength = carts.items.length
					- for (i = 0; i < cartLength; i++) {
						tr
							td.cartTable #{carts.items[i].title}
							// Need to convert price to currency format
							td $#{carts.items[i].price/100}        
							form.form-horizontal.updateQuantity(action='/cart/update/index' method='POST') 
								input(type='hidden', name='_csrf', value=_csrf)
								input(type='hidden', name='userID', value=user._id)
								input(type='hidden', name='index', value=i)
								td
									.form-group
										input.form-control.quantity.cartTable(type='text', id=i, name='quantity', size='100px', value=carts.items[i].quantity, required)
								td
									button.btn.btn.btn-primary.updateQuantity(type='button' onclick='')
										i.fa.fa-check
										| Update Quantity
							form.form-horizontal.deleteItem(action='/cart/delete/index' method='POST') 
								input(type='hidden', name='_csrf', value=_csrf)
								input(type='hidden', name='userID', value=user._id)
								input(type='hidden', name='index', value=i)
								td
									.form-group
										button.btn.btn.btn-primary.deleteItem(type='button' onclick='')
											i.fa.fa-check
											| Remove
					- }
				//- }
				//- else {
					td Nothing found!
				//- }

		hr
		a(href="/checkout/" + user._id)
			button.btn.btn-primary(type='button')
				i.fa.fa-check
				| Checkout
		hr
	include ../partials/sidebar

	script.
		var userID = '58597351697a3e29fe3af619';
		var app = angular.module('cartApp', []);

		app.controller('cartController', ['$scope', '$window', '$http', function($scope, $window, $http) {
		//var userID = !{carts.userID};
			//$scope.my = { prev: 0, next: 1 };
			//$scope.userID = $window.userID;
			console.log("In cartController userID =" + userID);
			$http.get("/getCartItems", {
				params: { userID: userID }
			})
			.then(function(response) {
				console.log("cartController return");
				$scope.items = response.data.cart.items;
			});

			// Update item quantity in cart
			$scope.updateQuantity = function(item) {
				var index = $scope.items.indexOf(item);
				//debugger;
				var quantity = $scope.items[index].quantity;
				//$scope.input={ quantity }
				//var quantity = $scope.input;
				console.log("updateQuantity: new quantity = " + quantity);
				//$scope.items.splice(index, 1);

				$http({
				  method: 'POST',
				  url: '/ajaxPostQuantity',
				  data: {
				  	quantity: quantity,
				    userID: userID,
				    index: index
				  }
				}).then(function successCallback(response) {
				    // this callback will be called asynchronously
				    // when the response is available
				    console.log("cartController return");
				  }, function errorCallback(response) {
				    // called asynchronously if an error occurs
				    // or server returns response with an error status.
				  });
			}

			// Remove an item from cart
			$scope.itemRemove = function(item) {
				console.log("itemRemove");
				var index = $scope.items.indexOf(item);
				$scope.items.splice(index, 1);

				$http({
				  method: 'POST',
				  url: '/ajaxPostRemove',
				  data: {
				    userID: userID,
				    index: index
				  }
				}).then(function successCallback(response) {
				    // this callback will be called asynchronously
				    // when the response is available
				    console.log("cartController return");
				  }, function errorCallback(response) {
				    // called asynchronously if an error occurs
				    // or server returns response with an error status.
				  });
			}
		}]);

