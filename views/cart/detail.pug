extends ../layout

block content
	.col-sm-9.mainContent(ng-app="cartApp" ng-controller="cartController")
		meta(name="csrf-token", content="#{token}")

		table
			thead
				tr: h3 Shopping Cart    
					th Item 
					th Price
					th Quantity
			tbody
				tr(ng-repeat="item in items" ng-cloak)
					td {{ item.title }}
					td {{ item.price/100 | currency }}
					td 
						.form-group
							input.form-control.quantity.cartTable(type='text', id=i, value='{{ item.quantity }}' ng-model='item.quantity' name='quantity', size='30', required)
							input(type='hidden', name='_csrf', value=_csrf)
							td
								button.btn.btn.btn-primary.updateQuantity(type='button' ng-click='updateQuantity(item)')
									i.fa.fa-check
									| Update Quantity
							td
								.form-group
									button.btn.btn.btn-primary.deleteItem(type='button' ng-click='itemRemove(item)')
										i.fa.fa-check
										| Remove

		hr
		a(href="/checkout/" + user._id)
			button.btn.btn-primary(type='button')
				i.fa.fa-check
				| Checkout
		hr
	include ../partials/sidebar

	script.
		var userID = '58597351697a3e29fe3af619';
		var app = angular.module('cartApp', []);

		app.controller('cartController', ['$scope', '$window', '$http', function($scope, $window, $http) {
			$http.get("/getCartItems", {
				params: { userID: userID }
			})
			.then(function(response) {
				console.log("cartController return");
				$scope.items = response.data.cart.items;
			});

			// Update item quantity in cart
			$scope.updateQuantity = function(item) {
				var index = $scope.items.indexOf(item);
				var quantity = $scope.items[index].quantity;
				//console.log("updateQuantity: new quantity = " + quantity);

				$http({
				  method: 'POST',
				  url: '/ajaxPostQuantity',
				  data: {
				  	quantity: quantity,
				    userID: userID,
				    index: index
				  }
				}).then(function successCallback(response) {
				    
				    console.log("updateQuantity return");
				  }, function errorCallback(response) {
				    // called asynchronously if an error occurs
				    // or server returns response with an error status.
				  });
				  // Add a flash message for the user
				  $('.containerFlash').append('<h4>Quantity has been updated!</h4>').fadeIn();
				  $('h4').fadeOut(2500);
			}

			// Remove an item from cart
			$scope.itemRemove = function(item) {
				console.log("itemRemove");
				var index = $scope.items.indexOf(item);
				$scope.items.splice(index, 1);

				$http({
				  method: 'POST',
				  url: '/ajaxPostRemove',
				  data: {
				    userID: userID,
				    index: index
				  }
				}).then(function successCallback(response) {
				    // this callback will be called asynchronously
				    // when the response is available
				    console.log("itemRemove return");
				  }, function errorCallback(response) {
				    // called asynchronously if an error occurs
				    // or server returns response with an error status.
				  });
				  $('.containerFlash').append('<h4>Item has been removed from cart</h4>').fadeIn();
				  $('h4').fadeOut(3000);
			}
		}]);

