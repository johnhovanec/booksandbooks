extends ../layout

block content
	.col-sm-9.mainContent
		table
			thead
				tr: th: th: h3 Featured Titles
			tbody.itemsTable
				tr
					each book, index in books
						if (index > 0 && index % 3 === 0) 
							tr 
						td
							a(href="books/" + book._id)
								img(height='175px' src="/art/" + book.imgPath)
							ul
								li #[span(class='metaField') Title:] #{book.title}
								li #[span(class='metaField') Author:] #{book.authorFName} #{book.authorLName}
								// Need to convert price value to currency format
								li #[span(class='metaField') Price:] #[span(class='metaFieldPrice') $#{book.price/100}]	


		div
			p Results #{+skip + 1}-#{+skip + books.length} of #{total}
			p=P
			if skip > 0
				a(href="#")
					button.btn.btn-paging(id="prevBtn" type='button' onclick="onPrev()")
						| Prev

			if !(pageMax >= total)
			a(href="#")
				button.btn.btn-paging(id="nextBtn" type='button' onclick="onNext()")
					| Next

		//- Restful paging
		//- - var pageMax = +skip + books.length;
		//- - var pageMin = skip;
		//- - var itemsPerPage = 6;
		//- -console.log("@@ PMin= " + pageMin + " PageMax = " + pageMax + " itempp  = " + itemsPerPage);
	
		//- // Display count of items on page and the total number of items; unless at end of items with only one to display
		//- if +skip + 1 < total
		//- 	p Results #{+skip + 1}-#{+skip + books.length} of #{total}
		//- else
		//- 	p Results #{+skip + 1} of #{total}
		
		//- //Show Prev button if past first page
		//- if skip > 0
		//- 	a(href="/?skip=" + (pageMin - itemsPerPage))
		//- 		button.btn.btn-paging(type='button')
		//- 			| Prev

		//- //Show Next button if unless it's the last page
		//- if !(pageMax >= total)			
		//- 	a(href="/?skip=" + pageMax)
		//- 		button.btn.btn-paging(type='button')
		//- 			| Next

		hr
		a(href="books/checkout")
			button.btn.btn-primary(type='button')
				i.fa.fa-check
				| Checkout
		hr
	include ../partials/sidebar		

	script.
		
		// Paging of items on index page, Next button
		function onNext() {
			//event.preventDefault();
			//$('.itemsTable').remove();  // remove existing records

			// skip = pageMin
			var skip = #{skip};
			var pageMax = #{skip} + #{books.length};
			var pageMin = #{skip};
			var total = #{total};

		console.log("*** pageMin= " + pageMin + " PageMax = " + pageMax);
			$.ajax({
				url: '/pageNext/'+pageMax,
				data: { 'skip' : skip, 'pageMin' : pageMin, 'pageMax' : pageMax, 'total' : total },
				type: "get",
				cache: false,
				success: function (savingStatus) {
					//$("#hdnOrigComments").val($('#txtComments').val());
					//$('#lblCommentsNotification').text(savingStatus);
					console.log("AJAX in view success");
				},
				error: function (xhr, ajaxOptions, thrownError) {
					//$('#lblCommentsNotification').text("Error encountered while saving the comments.");
					console.log("AJAX in view err");
				},
			});
		}


		function onPrev() {
			//event.preventDefault();
			//$('.itemsTable').remove();  // remove existing records

			// skip = pageMin
			var skip = #{skip}+pageMax;
			var pageMax = #{skip} + #{books.length};
			var pageMin = #{skip}+pageMax;

		console.log("*** skip = " + skip + " pageMin= " + pageMin + " PageMax = " + pageMax + " itempp  = " + itemsPerPage);
			$.ajax({
				url: '/pageNext/'+pageMin-itemsPerPage,
				data: { 'pageMin' : pageMin, 'pageMax' : pageMax },
				type: "get",
				cache: false,
				success: function (savingStatus) {
					//$("#hdnOrigComments").val($('#txtComments').val());
					//$('#lblCommentsNotification').text(savingStatus);
					console.log("AJAX in view success");
				},
				error: function (xhr, ajaxOptions, thrownError) {
					//$('#lblCommentsNotification').text("Error encountered while saving the comments.");
					console.log("AJAX in view err");
				},
			});
		}




